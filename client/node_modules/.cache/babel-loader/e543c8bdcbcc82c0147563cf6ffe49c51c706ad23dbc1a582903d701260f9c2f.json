{"ast":null,"code":"var _jsxFileName = \"C:\\\\RealTimeChat\\\\client\\\\src\\\\components\\\\MainWindow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport LoginForm from './LoginForm';\nimport MessageInput from './MessageInput';\nimport MessageField from './MessageField';\nimport NavigationHead from './NavigationHead';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:8000');\nfunction MainWindow() {\n  _s();\n  // main functional\n  const [username, setUsername] = useState(''); // current username\n  const [channelName, setChannelName] = useState(''); // current chat\n  const [message, setMessage] = useState(''); // message from input\n  const [messages, setMessages] = useState([]); // state of messages from chat\n  const [userList, setUserList] = useState([]); // users\n  const [loginForm, setLoginForm] = useState(true); // state of autification\n\n  const endRef = useRef(null);\n  useEffect(() => {\n    // actions after rendering\n    socket.on('join-user', user => {\n      const formattedUser = {\n        username: user.username\n      };\n      setUserList(prevUserList => [...prevUserList, formattedUser]);\n    });\n    socket.on('receive-message', data => {\n      const formattedMessage = {\n        username: data.username,\n        content: data.content,\n        timestamp: data.timestamp\n      };\n      setMessages(prevMessages => [...prevMessages, formattedMessage]);\n    });\n    socket.on('update-members', members => {\n      console.log(members);\n      setUserList(members);\n      console.log(userList);\n    });\n    socket.on('update-message', messages => {\n      console.log(messages);\n      setMessages(messages);\n    });\n    if (channelName) {\n      socket.emit('get-messages', channelName);\n    }\n    return () => {\n      // cansel all subs \n      socket.off('join-user');\n      socket.off('update-members');\n      socket.off('receive-message');\n      socket.off('update-message');\n    };\n  }, [channelName]);\n  const joinChannel = () => {\n    if (username && channelName) {\n      socket.emit('join-channel', {\n        channel_name: channelName,\n        username: username\n      });\n      setLoginForm(false); // hide login form\n    }\n  };\n  const sendMessage = () => {\n    if (message.trim() && channelName && username) {\n      // clear spaces around the message\n      const data = {\n        content: message,\n        channel_name: channelName,\n        username\n      };\n      socket.emit('send-message', data); // send 'send-message' event to server\n      setMessage(''); // сlear input after sending\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loginForm && /*#__PURE__*/_jsxDEV(LoginForm, {\n      username: username,\n      setUsername: setUsername,\n      setChannelName: setChannelName,\n      channelName: channelName,\n      joinChannel: joinChannel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), !loginForm && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NavigationHead, {\n        userList: userList,\n        channelName: channelName,\n        setUsername: setUsername\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          paddingBottom: '100px'\n        },\n        children: /*#__PURE__*/_jsxDEV(MessageField, {\n          messages: messages,\n          endRef: endRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: endRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n        message: message,\n        setMessage: setMessage,\n        sendMessage: sendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n}\n_s(MainWindow, \"u+Mxge+9+nKlwcEdgO3KDufwsh0=\");\n_c = MainWindow;\nexport default MainWindow;\nvar _c;\n$RefreshReg$(_c, \"MainWindow\");","map":{"version":3,"names":["React","useState","useEffect","useRef","LoginForm","MessageInput","MessageField","NavigationHead","io","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","MainWindow","_s","username","setUsername","channelName","setChannelName","message","setMessage","messages","setMessages","userList","setUserList","loginForm","setLoginForm","endRef","on","user","formattedUser","prevUserList","data","formattedMessage","content","timestamp","prevMessages","members","console","log","emit","off","joinChannel","channel_name","sendMessage","trim","children","fileName","_jsxFileName","lineNumber","columnNumber","style","paddingBottom","ref","_c","$RefreshReg$"],"sources":["C:/RealTimeChat/client/src/components/MainWindow.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport LoginForm from './LoginForm';\r\nimport MessageInput from './MessageInput';\r\nimport MessageField from './MessageField';\r\nimport NavigationHead from './NavigationHead';\r\nimport io from 'socket.io-client';\r\n\r\n\r\nconst socket = io('http://localhost:8000');\r\n\r\nfunction MainWindow() {\r\n\r\n  // main functional\r\n  const [username, setUsername] = useState(''); // current username\r\n  const [channelName, setChannelName] = useState(''); // current chat\r\n  const [message, setMessage] = useState(''); // message from input\r\n  const [messages, setMessages] = useState([]); // state of messages from chat\r\n  const [userList, setUserList] = useState([]); // users\r\n  const [loginForm, setLoginForm] = useState(true); // state of autification\r\n\r\n  const endRef = useRef(null);\r\n\r\n  useEffect(() => { // actions after rendering\r\n    socket.on('join-user', (user) => {\r\n      const formattedUser = {\r\n        username: user.username,\r\n      };\r\n      setUserList((prevUserList) => [...prevUserList, formattedUser]);\r\n    });\r\n\r\n    socket.on('receive-message', (data) => {\r\n      const formattedMessage = {\r\n        username: data.username,\r\n        content: data.content,\r\n        timestamp: data.timestamp,\r\n      };\r\n      setMessages((prevMessages) => [...prevMessages, formattedMessage]);\r\n    });\r\n\r\n    socket.on('update-members', (members) => {\r\n      console.log(members);\r\n      setUserList(members);\r\n      console.log(userList);\r\n    });\r\n\r\n    socket.on('update-message', (messages) => {\r\n      console.log(messages);\r\n      setMessages(messages);\r\n    });\r\n\r\n    if (channelName) {\r\n      socket.emit('get-messages', channelName);\r\n    }\r\n\r\n    return () => { // cansel all subs \r\n      socket.off('join-user');\r\n      socket.off('update-members');\r\n      socket.off('receive-message');\r\n      socket.off('update-message');\r\n    };\r\n  }, [channelName]);\r\n\r\n  const joinChannel = () => {\r\n    if (username && channelName) {\r\n      socket.emit('join-channel', { channel_name: channelName, username: username });\r\n      setLoginForm(false); // hide login form\r\n    }\r\n  };\r\n\r\n  const sendMessage = () => {\r\n    if (message.trim() && channelName && username) {  // clear spaces around the message\r\n      const data = {\r\n        content: message,\r\n        channel_name: channelName,\r\n        username,\r\n      };\r\n      socket.emit('send-message', data); // send 'send-message' event to server\r\n      setMessage(''); // сlear input after sending\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <>\r\n      {loginForm && (\r\n        <LoginForm\r\n          username={username}\r\n          setUsername={setUsername}\r\n          setChannelName={setChannelName}\r\n          channelName={channelName}\r\n          joinChannel={joinChannel}\r\n        />\r\n      )}\r\n      {!loginForm && (\r\n        <>\r\n          <NavigationHead\r\n            userList={userList}\r\n            channelName={channelName}\r\n            setUsername = {setUsername}\r\n          />\r\n          <div style={{ paddingBottom: '100px' }}>\r\n            <MessageField messages={messages} endRef={endRef} />\r\n          </div>\r\n          <div ref={endRef} />\r\n          <MessageInput message={message} setMessage={setMessage} sendMessage={sendMessage}/>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MainWindow;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}