{"ast":null,"code":"var _jsxFileName = \"C:\\\\RealTimeChat\\\\client\\\\src\\\\components\\\\MainWindow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport LoginForm from './LoginForm';\nimport MessageInput from './MessageInput';\nimport MessageField from './MessageField';\nimport UserSearch from './UserSearch';\nimport io from 'socket.io-client';\nimport { Stack } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:8000');\nfunction MainWindow() {\n  _s();\n  // main functional\n  const [username, setUsername] = useState(''); // current username\n  const [channelName, setChannelName] = useState(''); // current chat\n  const [message, setMessage] = useState(''); // message from input\n  const [messages, setMessages] = useState([]); // state of messages from chat\n  const [userList, setUserList] = useState([]); // users\n  const [searchedMember, setSearchedMember] = useState(''); //searched member of chat\n\n  useEffect(() => {\n    // actions after rendering\n    socket.on('search-users-result', users => {\n      // sub on event from server 'search-users-result'\n      setUserList(users);\n    });\n    socket.on('receive-message', message => {\n      // sub on event from server 'receive-message'\n      setMessages(prevMessages => [...prevMessages, message]);\n    });\n    return () => {\n      socket.off('receive-message');\n      socket.off('search-users-result');\n    };\n  }, []);\n  const joinChannel = () => {\n    socket.emit('join-channel', channelName, username); // send 'join-channel' event to server\n  };\n  const sendMessage = () => {\n    socket.emit('send-message', channelName, message); // send 'send-message' event to server\n    setMessage('');\n  };\n  const searchUsers = () => {\n    socket.emit('search-users', searchedMember); // send 'search-users' event to server\n  };\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    gap: 2,\n    children: [/*#__PURE__*/_jsxDEV(LoginForm, {\n      username: username,\n      setUsername: setUsername,\n      setChannelName: setChannelName,\n      channelName: channelName,\n      joinChannel: joinChannel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserSearch, {\n      searchedMember: searchedMember,\n      setSearchedMember: setSearchedMember,\n      userList: userList,\n      searchUsers: searchUsers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageField, {\n      messages: messages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n      message: message,\n      setMessage: setMessage,\n      sendMessage: sendMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(MainWindow, \"lRw4FunMSqNlWOjM5frn5SPND5g=\");\n_c = MainWindow;\n;\nexport default MainWindow;\nvar _c;\n$RefreshReg$(_c, \"MainWindow\");","map":{"version":3,"names":["React","useState","useEffect","LoginForm","MessageInput","MessageField","UserSearch","io","Stack","jsxDEV","_jsxDEV","socket","MainWindow","_s","username","setUsername","channelName","setChannelName","message","setMessage","messages","setMessages","userList","setUserList","searchedMember","setSearchedMember","on","users","prevMessages","off","joinChannel","emit","sendMessage","searchUsers","gap","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/RealTimeChat/client/src/components/MainWindow.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport LoginForm from './LoginForm';\r\nimport MessageInput from './MessageInput';\r\nimport MessageField from './MessageField';\r\nimport UserSearch from './UserSearch';\r\nimport io from 'socket.io-client';\r\nimport { Stack } from 'react-bootstrap';\r\n\r\nconst socket = io('http://localhost:8000');\r\n\r\nfunction MainWindow() {\r\n\r\n  // main functional\r\n  const [username, setUsername] = useState(''); // current username\r\n  const [channelName, setChannelName] = useState(''); // current chat\r\n  const [message, setMessage] = useState(''); // message from input\r\n  const [messages, setMessages] = useState([]); // state of messages from chat\r\n  const [userList, setUserList] = useState([]); // users\r\n  const [searchedMember, setSearchedMember] = useState(''); //searched member of chat\r\n\r\n  useEffect(() => { // actions after rendering\r\n    socket.on('search-users-result', (users) => { // sub on event from server 'search-users-result'\r\n      setUserList(users);\r\n    });\r\n    socket.on('receive-message', (message) => { // sub on event from server 'receive-message'\r\n      setMessages((prevMessages) => [...prevMessages, message]);\r\n    });\r\n    return () => {\r\n      socket.off('receive-message');\r\n      socket.off('search-users-result');\r\n    };\r\n  }, []);\r\n  const joinChannel = () => {\r\n    socket.emit('join-channel', channelName, username); // send 'join-channel' event to server\r\n  };\r\n\r\n  const sendMessage = () => {\r\n    socket.emit('send-message', channelName, message); // send 'send-message' event to server\r\n    setMessage('');\r\n  };\r\n\r\n  const searchUsers = () => {\r\n    socket.emit('search-users', searchedMember);  // send 'search-users' event to server\r\n  };\r\n  \r\n  return (\r\n    <Stack gap={2}>\r\n      <LoginForm\r\n        username={username}\r\n        setUsername= {setUsername}\r\n        setChannelName ={setChannelName}\r\n        channelName = {channelName}\r\n        joinChannel={joinChannel}\r\n      />\r\n      <UserSearch\r\n        searchedMember={searchedMember}\r\n        setSearchedMember = {setSearchedMember}\r\n        userList={userList}\r\n        searchUsers={searchUsers}\r\n      />\r\n      <MessageField messages = {messages} />\r\n      <MessageInput message={message} setMessage={setMessage} sendMessage={sendMessage} />\r\n    </Stack>\r\n  );\r\n};\r\n\r\nexport default MainWindow;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}