{"ast":null,"code":"var _jsxFileName = \"C:\\\\RealTimeChat\\\\client\\\\src\\\\components\\\\LoginForm.js\";\nimport React from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = ({\n  username,\n  setUsername,\n  channelName,\n  setChannelName,\n  joinChannel\n}) => {\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        // simple authification without password\n        type: \"text\",\n        value: username,\n        placeholder: \"Enter username...\",\n        onChange: event => setUsername(event.target.value) // when change input stage change temporary value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Channel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        // input channel name\n        type: \"text\",\n        placeholder: \"Enter channel name...\",\n        value: channelName,\n        onChange: event => setChannelName(event.target.value) // when change input stage change temporary value \n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"button\",\n      onClick: joinChannel,\n      children: \"Join\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","Button","Form","jsxDEV","_jsxDEV","LoginForm","username","setUsername","channelName","setChannelName","joinChannel","children","Group","className","Label","fileName","_jsxFileName","lineNumber","columnNumber","Control","type","value","placeholder","onChange","event","target","onClick","_c","$RefreshReg$"],"sources":["C:/RealTimeChat/client/src/components/LoginForm.js"],"sourcesContent":["import React from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\n\r\nconst LoginForm = ({ username, setUsername, channelName, setChannelName, joinChannel }) => {\r\n  return (\r\n    <Form>\r\n      <Form.Group className=\"mb-3\">\r\n        <Form.Label>Username</Form.Label>\r\n          <Form.Control // simple authification without password\r\n            type=\"text\"\r\n            value ={username}\r\n            placeholder=\"Enter username...\"\r\n            \r\n            onChange = {(event) => setUsername(event.target.value)} // when change input stage change temporary value\r\n          />\r\n      </Form.Group>\r\n      <Form.Group className=\"mb-3\">\r\n        <Form.Label>Channel</Form.Label>\r\n          <Form.Control // input channel name\r\n            type = \"text\"\r\n            placeholder =\"Enter channel name...\"\r\n            value = {channelName} \r\n            onChange = {(event) => setChannelName(event.target.value)} // when change input stage change temporary value \r\n          />\r\n      </Form.Group>\r\n      <Button className=\"button\" onClick = {joinChannel}>Join</Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,SAAS,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,WAAW;EAAEC,WAAW;EAAEC,cAAc;EAAEC;AAAY,CAAC,KAAK;EACzF,oBACEN,OAAA,CAACF,IAAI;IAAAS,QAAA,gBACHP,OAAA,CAACF,IAAI,CAACU,KAAK;MAACC,SAAS,EAAC,MAAM;MAAAF,QAAA,gBAC1BP,OAAA,CAACF,IAAI,CAACY,KAAK;QAAAH,QAAA,EAAC;MAAQ;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eAC/Bd,OAAA,CAACF,IAAI,CAACiB,OAAO;QAAC;QACZC,IAAI,EAAC,MAAM;QACXC,KAAK,EAAGf,QAAS;QACjBgB,WAAW,EAAC,mBAAmB;QAE/BC,QAAQ,EAAKC,KAAK,IAAKjB,WAAW,CAACiB,KAAK,CAACC,MAAM,CAACJ,KAAK,CAAE,CAAC;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM,CAAC,eACbd,OAAA,CAACF,IAAI,CAACU,KAAK;MAACC,SAAS,EAAC,MAAM;MAAAF,QAAA,gBAC1BP,OAAA,CAACF,IAAI,CAACY,KAAK;QAAAH,QAAA,EAAC;MAAO;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eAC9Bd,OAAA,CAACF,IAAI,CAACiB,OAAO;QAAC;QACZC,IAAI,EAAG,MAAM;QACbE,WAAW,EAAE,uBAAuB;QACpCD,KAAK,EAAIb,WAAY;QACrBe,QAAQ,EAAKC,KAAK,IAAKf,cAAc,CAACe,KAAK,CAACC,MAAM,CAACJ,KAAK,CAAE,CAAC;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM,CAAC,eACbd,OAAA,CAACH,MAAM;MAACY,SAAS,EAAC,QAAQ;MAACa,OAAO,EAAIhB,WAAY;MAAAC,QAAA,EAAC;IAAI;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5D,CAAC;AAEX,CAAC;AAACS,EAAA,GAzBItB,SAAS;AA2Bf,eAAeA,SAAS;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}